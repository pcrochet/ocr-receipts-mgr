<mxfile host="Electron" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/28.0.6 Chrome/138.0.7204.100 Electron/37.2.3 Safari/537.36" version="28.0.6">
  <diagram name="Page-1" id="8cAgOMzsa88dXhZdrE5C">
    <mxGraphModel dx="1042" dy="1891" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="loap9uXRFmGftXZ2aNcR-1" target="loap9uXRFmGftXZ2aNcR-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="loap9uXRFmGftXZ2aNcR-1" value="chatGPT 5&lt;div&gt;11/08/2025&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="loap9uXRFmGftXZ2aNcR-2" value="surcharge de la page admin" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="230" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="5na9Em1bIuvDeGic2Il7-7" target="dkjHgfxtDHa3xEaJLgyd-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="dkjHgfxtDHa3xEaJLgyd-2" target="5na9Em1bIuvDeGic2Il7-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-2" value="Nettoyage de code + création d&#39;un prompt global permettant de reproduire proprement le contexte de l&#39;application dans de nouveaux prompts." style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="735" y="-280" width="210" height="70" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-4" target="dkjHgfxtDHa3xEaJLgyd-2" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="840" y="-250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-4" value="chatGPT 5 thinking&lt;div&gt;12/08/2025&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="780" y="-380" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-45" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-5" target="dkjHgfxtDHa3xEaJLgyd-44" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-5" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div style=&quot;&quot;&gt;J&#39;aimerais que tu m&#39;aides à durcir mon code, en t&#39;assurant qu&#39;il corresponde à ce que je viens d&#39;énoncer. Si tu vois des points à mettre à jour, tu me proposes. Je souhaite que tu me proposes également d&#39;affiner l&#39;explication du contexte, que je pourrai utiliser ultérieurement pour initialiser de nouveaux prompts afin que tu m&#39;aides à étendre l&#39;application.&lt;br&gt;&lt;br&gt;Comment allons nous procéder ?&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;align=left;spacingLeft=24;" parent="1" vertex="1">
          <mxGeometry x="450" y="440" width="760" height="130" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-7" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Aujourd&#39;hui, nous essayons de faire le job&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;collect_from_gmail&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= workflow de collecte d&#39;emails en provenance de gmail + extraction des pièces jointes + insertion des tickets en base avec principales metadata créées (essentiellement donc la provenance des tickets, pour permettre une corrélation ultérieure).&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;Peux tu stp me proposer un plan d&#39;actions ? clairement il faudrait créer le job &quot;collect_from_gmail&quot; (pouvoir le lancer en management command, mais egalement mettre à jour le template custom receipt_management.html afin de pouvoir le lancer depuis l&#39;admin.&lt;br&gt;&lt;br&gt;Ne génère pas encore de code, tu m&#39;expliques les étapes une à une. Sûrement que j&#39;aurai des questions, quand on sera d&#39;accord alors tu me demanderas les fichiers existants pour que tu puisses insérer les nouveautés sans casser l&#39;existant...&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;align=left;spacingLeft=24;" parent="1" vertex="1">
          <mxGeometry x="2360" y="310" width="760" height="150" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-8" value="récupération des emails gmail + extraction des pièces jointes + metadata basiques (sender / subject / description)" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2599" y="-260" width="210" height="70" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-27" value="&lt;u&gt;Mise à jour du code&lt;/u&gt;&lt;div&gt;&lt;br&gt;* Création de&amp;nbsp;&lt;br&gt;&lt;div&gt;- backend/sitecfg/checks.py&lt;/div&gt;&lt;div&gt;- backend/sitecfg/apps.py&lt;br&gt;&lt;span style=&quot;text-align: center;&quot;&gt;* Update de&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;- backend/sitecfg/settings.py&lt;br&gt;&lt;br&gt;&lt;u&gt;Exécution&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;u&gt;commande&lt;br&gt;&lt;/u&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;python .\manage.py check&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="110" y="1170" width="320" height="180" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-48" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-44" target="dkjHgfxtDHa3xEaJLgyd-47" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="667" y="960" />
              <mxPoint x="395" y="960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-51" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-44" target="dkjHgfxtDHa3xEaJLgyd-50" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="827" y="970" as="sourcePoint" />
            <mxPoint x="1470" y="1155" as="targetPoint" />
            <Array as="points">
              <mxPoint x="667" y="960" />
              <mxPoint x="1860" y="960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-55" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-44" target="dkjHgfxtDHa3xEaJLgyd-54" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="667" y="960" />
              <mxPoint x="740" y="960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-44" value="&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span style=&quot;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;Étape 1 -&amp;nbsp;&lt;/span&gt;Health check du projet (automatisé)&lt;br&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;Étape 2 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Settings durcis&lt;br&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;&lt;span data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;Étape 3 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Modélisation canonique&lt;br&gt;&lt;span data-end=&quot;1663&quot; data-start=&quot;1617&quot;&gt;&lt;span data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;&lt;span data-end=&quot;1663&quot; data-start=&quot;1617&quot;&gt;Étape 4 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Exécution &amp;amp; traçabilité des jobs&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;&lt;span data-end=&quot;1663&quot; data-start=&quot;1617&quot;&gt;&lt;span data-end=&quot;2118&quot; data-start=&quot;2093&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;Étape 5 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Admin durci&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;&lt;span data-end=&quot;1663&quot; data-start=&quot;1617&quot;&gt;&lt;span data-end=&quot;2118&quot; data-start=&quot;2093&quot;&gt;&lt;span data-end=&quot;2527&quot; data-start=&quot;2503&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;Étape 6 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Tests &amp;amp; QA&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;Plus tard:&amp;nbsp;PGVector + Celery + permissions/roles + exports avancés.&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fontStyle=0" parent="1" vertex="1">
          <mxGeometry x="507" y="740" width="320" height="170" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-49" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-47" target="dkjHgfxtDHa3xEaJLgyd-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-47" value="&lt;span data-start=&quot;227&quot; data-end=&quot;276&quot;&gt;&lt;span data-start=&quot;227&quot; data-end=&quot;276&quot;&gt;Étape 1 -&amp;nbsp;&lt;/span&gt;Health check du projet (automatisé)&lt;br&gt;&lt;span data-start=&quot;227&quot; data-end=&quot;276&quot; style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); background-color: transparent;&quot;&gt;&lt;span data-start=&quot;692&quot; data-end=&quot;721&quot;&gt;Étape 2 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Settings durcis&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="270" y="1020" width="250" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-53" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-50" target="dkjHgfxtDHa3xEaJLgyd-52" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-50" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;Étape 5 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Admin durci&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1800" y="1010" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="dkjHgfxtDHa3xEaJLgyd-52" target="5na9Em1bIuvDeGic2Il7-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-52" value="&lt;div&gt;ajouter un “Dashboard OCR” dans l’admin&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1) Vue admin dédiée&lt;/div&gt;&lt;div&gt;2) URL vers la vue&lt;/div&gt;&lt;div&gt;3) Lien visible sur la home de l’admin&lt;/div&gt;&lt;div&gt;4) Template du dashboard&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1710" y="1160" width="310" height="130" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-57" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-54" target="dkjHgfxtDHa3xEaJLgyd-56" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-54" value="&lt;span data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;Étape 3 -&amp;nbsp;&lt;/span&gt;Modélisation canonique" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="640" y="1020" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-56" target="qobuwuR_mwM1VG5iIdwQ-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dkjHgfxtDHa3xEaJLgyd-56" value="Points clés&lt;div&gt;&lt;br&gt;&lt;div&gt;Unicité Brand insensible à la casse via UniqueConstraint(Lower(&quot;name&quot;)) (pas besoin d’extension citext).&lt;/div&gt;&lt;div&gt;Historique d’états séparé (StateChange) pour auditorat et debugging.&lt;/div&gt;&lt;div&gt;Transitions strictes dans advance_to() — on loguera le job_run réel à l’Étape 4.&lt;/div&gt;&lt;div&gt;Chemins stockés relatifs à VAR_DIR (on ne fige pas un FileStorage, plus simple pour tes jobs I/O).&lt;/div&gt;&lt;div&gt;Contraintes (≥ 0) pour éviter les corruptions de données et erreurs silencieuses.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="507" y="1169" width="493" height="180" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="qobuwuR_mwM1VG5iIdwQ-1" target="qobuwuR_mwM1VG5iIdwQ-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-1" value="&lt;u&gt;Mise à jour du code&lt;/u&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;* Update de&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;- backend/ocr/models.py&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;- backend/ocr/admin.py&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;u&gt;Exécution&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;u&gt;commande&lt;br&gt;&lt;/u&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;python&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;manage.py runserver 0.0.0.0:8000&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="593.5" y="1410" width="320" height="180" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="qobuwuR_mwM1VG5iIdwQ-3" target="qobuwuR_mwM1VG5iIdwQ-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-3" value="Débugage admin receipts&lt;br&gt;&lt;br&gt;Champs obligatoire selon état receipts. Au minimal, il faut renseigner le path et le filename. le sha256 est calculé automatiquement en sauvegardant." style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="598.5" y="1660" width="310" height="100" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-5" value="&lt;div&gt;on passe en architecture “services + admin mince” avec :&lt;/div&gt;&lt;div&gt;ocr/services/ : audit, storage (I/O disque), receipts (orchestration métier)&lt;/div&gt;&lt;div&gt;ocr/admin/ : receipts.py, brands.py, actions.py, __init__.py&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;u&gt;Mise à jour du code&lt;/u&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;* Création de&amp;nbsp;&lt;br&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;backend/ocr/admin/actions.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/admin/brands.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/admin/receipts.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/services/audit.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/services/receipts.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/services/storage.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="543.5" y="1830" width="420" height="210" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="qobuwuR_mwM1VG5iIdwQ-7" target="qobuwuR_mwM1VG5iIdwQ-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-7" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-align: center;&quot; data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;276&quot; data-start=&quot;227&quot;&gt;&lt;span data-end=&quot;721&quot; data-start=&quot;692&quot;&gt;&lt;span data-end=&quot;1105&quot; data-start=&quot;1069&quot;&gt;&lt;span data-end=&quot;1663&quot; data-start=&quot;1617&quot;&gt;Étape 4 -&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Exécution &amp;amp; traçabilité des jobs&amp;nbsp;&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1210" y="1020" width="240" height="60" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dkjHgfxtDHa3xEaJLgyd-44" target="qobuwuR_mwM1VG5iIdwQ-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="840" y="990" as="sourcePoint" />
            <mxPoint x="913" y="1100" as="targetPoint" />
            <Array as="points">
              <mxPoint x="667" y="960" />
              <mxPoint x="1320" y="960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="qobuwuR_mwM1VG5iIdwQ-9" target="qobuwuR_mwM1VG5iIdwQ-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-9" value="But : avoir un modèle JobRun, un contexte d’exécution pour toutes les commandes, logs par job et métriques." style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1200" y="1185" width="260" height="80" as="geometry" />
        </mxCell>
        <mxCell id="qobuwuR_mwM1VG5iIdwQ-11" value="&lt;u&gt;Mise à jour du code&lt;/u&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;* Update de&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;- backend/ops/services/jobrun.py&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;- backend/ops/admin.py&lt;/span&gt;&lt;br style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;u&gt;Exécution&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;&lt;u style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;commande&lt;br&gt;&lt;/u&gt;&lt;br&gt;python manage.py makemigrations ops&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;python manage.py migrate&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;python&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;manage.py runserver 0.0.0.0:8000&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1170" y="1349" width="320" height="180" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="5na9Em1bIuvDeGic2Il7-1" target="5na9Em1bIuvDeGic2Il7-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-1" value="&lt;u&gt;Mise à jour du code&lt;/u&gt;&lt;div&gt;&lt;br&gt;* Création de&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;div&gt;- backend/ocr/services/ingest.py&lt;/div&gt;&lt;div&gt;- backend/templates/admin/index.html&lt;/div&gt;&lt;div&gt;- backend/ocr/templates/ocr/receipts_management.html&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;br&gt;* Update de&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/ocr/admin_views.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/sitecfg/apps.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- backend/sitecfg/urls.py&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- ops/management/commands/ingest_from_dir.py&lt;/span&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;u&gt;&lt;br&gt;&lt;/u&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;u&gt;Exécution&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;&lt;u style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;commande&lt;br&gt;&lt;/u&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;python&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;manage.py runserver 0.0.0.0:8000&lt;/span&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="1690" y="1340" width="320" height="260" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-3" value="v0.1.0-aplha" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1790" y="1640" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="5na9Em1bIuvDeGic2Il7-5" target="dkjHgfxtDHa3xEaJLgyd-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-5" value="chatGPT 5 auto&lt;div&gt;13/08/2025&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="2619" y="-410" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-7" value="Tu es expert en codage d&#39;applications Django.&lt;br&gt;Tu m&#39;aides à fabriquer une application communautaire qui va permettre de suivre l&#39;évolution des prix.&lt;br&gt;&lt;br&gt;L&#39;application fonctionne comme une machine à état. Les tickets de caisses évoluent dans le système en changeant d&#39;état ; petit à petit des jobs ajoutent les metadatas pertinentes qui nous permettront d&#39;atteindre notre but.&lt;br&gt;Sur le plan technique Django:&lt;br&gt;* les données sont stockées dans PostgreSQL (nous prévoyons d&#39;utiliser PGVector plus tard)&lt;br&gt;* le répertoire principal Django d&#39;appelle &quot;backend&quot;&lt;br&gt;* l&#39;app principale &quot;Sitecfg&quot; embarque les fichiers settings.py et urls.py&lt;br&gt;* l&#39;app &quot;ocr&quot; porte&lt;br&gt;- le modèle principal (&quot;receipts&quot;, &quot;receipts_lines&quot; et &quot;brand&quot; pour le moment)&lt;div&gt;- les différents états (&lt;span style=&quot;background-color: transparent;&quot;&gt;&quot;collected&quot;, &quot;ingested&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;ocr_done&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;vectorized&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;brand_store_identified&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- l&#39;app &quot;ops&quot; contient les&amp;nbsp;jobs qui permettent de faire avancer la machine à état (collect_from_gmail, collect_from_dir, compute_ocr, vectorize_receipts, guess_brand).&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ces jobs peuvent être lancés en management command. Cette app embarque donc également un modèle JobRun, qui permet de suivre leurs exécutions et d&#39;en extraire le plus possible de métriques.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;* on utilise le module d&#39;admin django bien entendu pour gérer les modèles&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- notamment utilisation de décorateurs vs. shortdescription&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;* au niveau admin, on a un template custom qui permet également de lancer les jobs.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;* toutes les données du projet Django sont stockées dans&amp;nbsp;BASE_DIR/var (&quot;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;incoming&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;quarantine&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;receipts_raw&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;logs&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;exports&quot;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;align=left;spacingLeft=24;" vertex="1" parent="1">
          <mxGeometry x="440" y="-50" width="760" height="420" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="5na9Em1bIuvDeGic2Il7-9" target="dkjHgfxtDHa3xEaJLgyd-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5na9Em1bIuvDeGic2Il7-9" value="Tu es expert en codage d&#39;applications Django.&lt;br&gt;Tu m&#39;aides à fabriquer une application communautaire qui va permettre de suivre l&#39;évolution des prix.&lt;br&gt;&lt;br&gt;L&#39;application fonctionne comme une machine à état. Des tickets de caisses évoluent dans le système en changeant d&#39;état ; petit à petit des jobs ajoutent les metadatas pertinentes qui nous permettront d&#39;atteindre notre but.&lt;br&gt;&lt;br&gt;Sur le plan technique Django:&lt;br&gt;* les données sont stockées dans PostgreSQL (nous prévoyons d&#39;utiliser PGVector plus tard)&lt;br&gt;* le répertoire principal Django d&#39;appelle &quot;backend&quot;&lt;br&gt;* l&#39;app principale &quot;Sitecfg&quot; embarque les fichiers principaux settings.py, apps.py et urls.py. Tu m&#39;as aussi fait faire un fichier checks.py que je peux appeler pour vérifier la cohérence de mon code.&lt;br&gt;* l&#39;app &quot;ocr&quot; porte&lt;br&gt;- le modèle principal (&quot;receipts&quot;, &quot;receipts_lines&quot; et &quot;brand&quot; pour le moment)&lt;div&gt;- les différents états (&lt;span style=&quot;background-color: transparent;&quot;&gt;&quot;collected&quot;, &quot;ingested&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;ocr_done&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;vectorized&quot;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;brand_store_identified&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- un template receipts_management.html qui affiche un tableau de bord des receipts selon leurs états ; et qui permet aussi de lancer les jobs faisant évoluer les receipts dans le système.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;* l&#39;app &quot;ops&quot; contient les&amp;nbsp;jobs qui permettent de faire avancer la machine à état (collect_from_gmail, collect_from_dir, compute_ocr, vectorize_receipts, guess_brand). Outre depuis l&#39;admin (via app ocr),&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ces jobs peuvent être lancés en management command. Cette app embarque également un modèle JobRun, qui permet de suivre leurs exécutions et d&#39;en extraire le plus possible de métriques.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;* on utilise le module d&#39;admin django bien entendu pour gérer les modèles&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- notamment utilisation de décorateurs vs. shortdescription&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;* au niveau admin, on étend l&#39;index.html afin d&#39;ajouter un lien vers notre template receipts_management.html.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;* toutes les données du projet Django sont stockées dans&amp;nbsp;BASE_DIR/var (&quot;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;incoming&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;quarantine&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;receipts_raw&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;logs&quot;, &quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;exports&quot;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;align=left;spacingLeft=24;" vertex="1" parent="1">
          <mxGeometry x="2370" y="-140" width="760" height="370" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
